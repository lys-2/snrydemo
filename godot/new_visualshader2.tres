[gd_resource type="VisualShader" load_steps=9 format=2]

[sub_resource type="VisualShaderNodeInput" id=1]
input_name = "color"

[sub_resource type="VisualShaderNodeVectorDecompose" id=2]

[sub_resource type="VisualShaderNodeInput" id=3]
input_name = "uv"

[sub_resource type="VisualShaderNodeScalarOp" id=4]
default_input_values = [ 0, 0.0, 1, 3.0 ]
operator = 2

[sub_resource type="VisualShaderNodeInput" id=5]
input_name = "uv"

[sub_resource type="VisualShaderNodeVectorCompose" id=6]

[sub_resource type="VisualShaderNodeScalarOp" id=7]
default_input_values = [ 0, 0.0, 1, 60.0 ]
operator = 3

[sub_resource type="VisualShaderNodeVectorDecompose" id=8]

[resource]
code = "shader_type spatial;
render_mode blend_sub, cull_disabled, specular_schlick_ggx;




void vertex() {
// Input:3
	vec3 n_out3p0 = vec3(UV, 0.0);

// VectorDecompose:7
	float n_out7p0 = n_out3p0.x;
	float n_out7p1 = n_out3p0.y;
	float n_out7p2 = n_out3p0.z;

// ScalarOp:6
	float n_in6p1 = 60.00000;
	float n_out6p0 = n_out7p0 / n_in6p1;

// VectorCompose:5
	float n_in5p2 = 0.00000;
	vec3 n_out5p0 = vec3(n_out6p0, n_out6p0, n_in5p2);

// Output:0
	COLOR.rgb = n_out5p0;

}

void fragment() {
// Input:11
	vec3 n_out11p0 = COLOR.rgb;

// ScalarOp:15
	float n_in15p1 = 3.00000;
	float n_out15p0 = dot(n_out11p0, vec3(0.333333, 0.333333, 0.333333)) * n_in15p1;

// Output:0
	ALBEDO = vec3(n_out15p0);
	EMISSION = vec3(n_out15p0);

}

void light() {
// Output:0

}
"
modes/blend = 2
modes/cull = 2
nodes/vertex/0/position = Vector2( 380, 160 )
nodes/vertex/3/node = SubResource( 5 )
nodes/vertex/3/position = Vector2( -560, 260 )
nodes/vertex/5/node = SubResource( 6 )
nodes/vertex/5/position = Vector2( 60, 280 )
nodes/vertex/6/node = SubResource( 7 )
nodes/vertex/6/position = Vector2( -160, 260 )
nodes/vertex/7/node = SubResource( 8 )
nodes/vertex/7/position = Vector2( -400, 260 )
nodes/vertex/connections = PoolIntArray( 3, 0, 7, 0, 5, 0, 0, 6, 7, 0, 6, 0, 6, 0, 5, 1, 6, 0, 5, 0 )
nodes/fragment/11/node = SubResource( 1 )
nodes/fragment/11/position = Vector2( -260, 280 )
nodes/fragment/13/node = SubResource( 2 )
nodes/fragment/13/position = Vector2( -43, 375 )
nodes/fragment/14/node = SubResource( 3 )
nodes/fragment/14/position = Vector2( -562, 221 )
nodes/fragment/15/node = SubResource( 4 )
nodes/fragment/15/position = Vector2( 120, 200 )
nodes/fragment/connections = PoolIntArray( 11, 0, 15, 0, 15, 0, 0, 0, 15, 0, 0, 5 )
