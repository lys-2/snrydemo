[gd_resource type="VisualShader" load_steps=27 format=2]

[ext_resource path="res://assets/lightblue_equirectangular.png" type="Texture" id=1]

[sub_resource type="VisualShaderNodeInput" id=1]
input_name = "vertex"

[sub_resource type="VisualShaderNodeScalarConstant" id=2]
constant = 0.803

[sub_resource type="VisualShaderNodeVectorOp" id=3]
default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( 0.01, 0.01, 0.01 ) ]
operator = 2

[sub_resource type="VisualShaderNodeInput" id=4]
input_name = "camera"

[sub_resource type="VisualShaderNodeInput" id=5]
input_name = "inv_projection"

[sub_resource type="VisualShaderNodeTransformVecMult" id=6]

[sub_resource type="VisualShaderNodeInput" id=7]
input_name = "vertex"

[sub_resource type="VisualShaderNodeScalarConstant" id=8]
constant = 0.551

[sub_resource type="VisualShaderNodeInput" id=9]
input_name = "time"

[sub_resource type="VisualShaderNodeColorConstant" id=10]
output_port_for_preview = 0
constant = Color( 0.953125, 0.635552, 0.186157, 1 )

[sub_resource type="VisualShaderNodeScalarFunc" id=11]
function = 0

[sub_resource type="VisualShaderNodeVectorCompose" id=12]

[sub_resource type="VisualShaderNodeVectorDecompose" id=13]

[sub_resource type="VisualShaderNodeScalarOp" id=14]
operator = 2

[sub_resource type="VisualShaderNodeScalarConstant" id=15]
constant = 0.1

[sub_resource type="VisualShaderNodeTransformDecompose" id=16]

[sub_resource type="VisualShaderNodeInput" id=17]
input_name = "world"

[sub_resource type="VisualShaderNodeTransformDecompose" id=18]

[sub_resource type="VisualShaderNodeTransformVecMult" id=19]

[sub_resource type="VisualShaderNodeInput" id=20]
input_name = "fragcoord"

[sub_resource type="VisualShaderNodeVectorDecompose" id=21]

[sub_resource type="VisualShaderNodeVectorCompose" id=22]

[sub_resource type="VisualShaderNodeBooleanConstant" id=23]
constant = true

[sub_resource type="VisualShaderNodeBooleanConstant" id=24]

[sub_resource type="VisualShaderNodeTexture" id=25]
texture = ExtResource( 1 )

[resource]
code = "shader_type spatial;
render_mode specular_schlick_ggx, unshaded, world_vertex_coords;

uniform sampler2D tex_frg_9;



void vertex() {
// Output:0

}

void fragment() {
// Input:13
	mat4 n_out13p0 = CAMERA_MATRIX;

// Input:16
	vec3 n_out16p0 = VERTEX;

// TransformVectorMult:15
	vec3 n_out15p0 = (n_out13p0 * vec4(n_out16p0, 1.0)).xyz;

// VectorDecompose:31
	float n_out31p0 = n_out15p0.x;
	float n_out31p1 = n_out15p0.y;
	float n_out31p2 = n_out15p0.z;

// VectorCompose:32
	vec3 n_out32p0 = vec3(n_out31p0, n_out31p1, n_out31p0);

// VectorOp:12
	vec3 n_in12p1 = vec3(0.01000, 0.01000, 0.01000);
	vec3 n_out12p0 = n_out32p0 * n_in12p1;

// Texture:9
	vec4 tex_frg_9_read = texture(tex_frg_9, n_out12p0.xy);
	vec3 n_out9p0 = tex_frg_9_read.rgb;
	float n_out9p1 = tex_frg_9_read.a;

// VectorDecompose:22
	float n_out22p0 = n_out9p0.x;
	float n_out22p1 = n_out9p0.y;
	float n_out22p2 = n_out9p0.z;

// VectorCompose:21
	float n_in21p0 = 0.00000;
	vec3 n_out21p0 = vec3(n_in21p0, n_out22p1, n_out22p2);

// Boolean:7
	bool n_out7p0 = true;

// Boolean:8
	bool n_out8p0 = false;

// Output:0
	ALBEDO = n_out21p0;
	ROUGHNESS = (n_out7p0 ? 1.0 : 0.0);
	SPECULAR = (n_out8p0 ? 1.0 : 0.0);

}

void light() {
// Output:0

}
"
graph_offset = Vector2( -469, -14 )
flags/unshaded = true
flags/world_vertex_coords = true
nodes/fragment/0/position = Vector2( 660, 120 )
nodes/fragment/2/node = SubResource( 10 )
nodes/fragment/2/position = Vector2( -920, 220 )
nodes/fragment/7/node = SubResource( 23 )
nodes/fragment/7/position = Vector2( 240, 400 )
nodes/fragment/8/node = SubResource( 24 )
nodes/fragment/8/position = Vector2( 140, 340 )
nodes/fragment/9/node = SubResource( 25 )
nodes/fragment/9/position = Vector2( -320, 200 )
nodes/fragment/10/node = SubResource( 1 )
nodes/fragment/10/position = Vector2( -720, 220 )
nodes/fragment/11/node = SubResource( 2 )
nodes/fragment/11/position = Vector2( 20, 160 )
nodes/fragment/12/node = SubResource( 3 )
nodes/fragment/12/position = Vector2( -500, 320 )
nodes/fragment/13/node = SubResource( 4 )
nodes/fragment/13/position = Vector2( -1000, 420 )
nodes/fragment/14/node = SubResource( 5 )
nodes/fragment/14/position = Vector2( -500, 220 )
nodes/fragment/15/node = SubResource( 6 )
nodes/fragment/15/position = Vector2( -760, 480 )
nodes/fragment/16/node = SubResource( 7 )
nodes/fragment/16/position = Vector2( -1040, 540 )
nodes/fragment/17/node = SubResource( 8 )
nodes/fragment/17/position = Vector2( -720, 340 )
nodes/fragment/18/node = SubResource( 9 )
nodes/fragment/18/position = Vector2( -320, 480 )
nodes/fragment/20/node = SubResource( 11 )
nodes/fragment/20/position = Vector2( -40, 560 )
nodes/fragment/21/node = SubResource( 12 )
nodes/fragment/21/position = Vector2( 140, 220 )
nodes/fragment/22/node = SubResource( 13 )
nodes/fragment/22/position = Vector2( -120, 240 )
nodes/fragment/24/node = SubResource( 14 )
nodes/fragment/24/position = Vector2( -300, 560 )
nodes/fragment/25/node = SubResource( 15 )
nodes/fragment/25/position = Vector2( -600, 620 )
nodes/fragment/26/node = SubResource( 16 )
nodes/fragment/26/position = Vector2( -100, 380 )
nodes/fragment/27/node = SubResource( 17 )
nodes/fragment/27/position = Vector2( 20, -20 )
nodes/fragment/28/node = SubResource( 18 )
nodes/fragment/28/position = Vector2( 240, 100 )
nodes/fragment/29/node = SubResource( 19 )
nodes/fragment/29/position = Vector2( 280, -40 )
nodes/fragment/30/node = SubResource( 20 )
nodes/fragment/30/position = Vector2( -80, 60 )
nodes/fragment/31/node = SubResource( 21 )
nodes/fragment/31/position = Vector2( -483.37, 547.13 )
nodes/fragment/32/node = SubResource( 22 )
nodes/fragment/32/position = Vector2( -534.37, 451.13 )
nodes/fragment/connections = PoolIntArray( 7, 0, 0, 3, 8, 0, 0, 4, 9, 0, 22, 0, 22, 1, 21, 1, 22, 2, 21, 2, 18, 0, 24, 0, 24, 0, 20, 0, 25, 0, 24, 1, 13, 0, 15, 0, 13, 0, 26, 0, 27, 0, 28, 0, 27, 0, 29, 0, 12, 0, 9, 0, 15, 0, 31, 0, 32, 0, 12, 0, 31, 0, 32, 2, 31, 1, 32, 1, 31, 0, 32, 0, 30, 0, 29, 1, 21, 0, 0, 0, 16, 0, 15, 1 )
